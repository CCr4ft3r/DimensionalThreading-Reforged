plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

group = modgroup
version = "${mcversion}-v${modversion}"

java {
    archivesBaseName = 'Dimensional-Threading-Reforged'
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

minecraft {
    mappings channel: "${mappingsch}", version: "${mappings_version}-${mcversion}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        client {
            taskName "${modid}-${modversion}-client"
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', modid
            property 'terminal.jline', 'true'
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName "${modid}-${modversion}-server"
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', modid
            property 'terminal.jline', 'true'
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
    config "${modid}.mixins.json"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation("com.github.wearblackallday:JavaUtils:bd58640372") {
        jarJar.ranged(it, "[bd58640372,)")
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    from('./') {
        include 'README.md'
        include 'LICENSE'
    }

    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "${modauthor}",
                "Specification-Version": "${modversion}",
                "Implementation-Title": "${modname}",
                "Implementation-Version": "${modversion}",
                "Implementation-Vendor" : "${modauthor}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixin.json"
        ])
    }
}

jarJar {
    fromRuntimeConfiguration()
    dependencies {
        include(dependency("com.github.wearblackallday:JavaUtils"))
    }
}

// Process target resources with mod info
tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand(rootProject.properties)
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}